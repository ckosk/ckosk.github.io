<?xml version="1.0" encoding="UTF-8"?>
<Module>
   <ModulePrefs title="Photobooth Kiosk" description="Testing Photobooth Kiosk" author="" background="transparent">
      <Require feature="reveldigital" />
      <UserPref name="myCountdownPref" display_name="Timer Duration" datatype="string" default_value="5" required="true" />
      <UserPref name="timerLoc" display_name="Timer Location" datatype="enum" default_value="TLeft" required="true">
         <EnumValue value="TLeft" display_value="Top-Left" />
         <EnumValue value="TRight" display_value="Top-Right" />
         <EnumValue value="BLeft" display_value="Bottom-Left" />
         <EnumValue value="BRight" display_value="Bottom-Right" />
      </UserPref>
      <UserPref name="textStyle" display_name="Countdown Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:64px;font-weight:bold;" required="true" />
      <UserPref name="ForeColor" datatype="hidden" />
      <UserPref name="BackColor" datatype="hidden" />
      <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
      <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
      <UserPref name="rdKey" display_name="Device Registration Key" default_value="*|DEVICE.REGISTRATIONKEY|*" datatype="hidden" />
   </ModulePrefs>
   <Content type="html"><![CDATA[<style type="text/css">

    body *{
        line-height: 1.2em; 
        letter-spacing: 0; 
        word-spacing: normal;
    }

    body{
        background-color: transparent;
    }

    .my-style{
        __UP_myStylePref__;
    }

    #countdown{
        position: absolute;
        __UP_textStyle__;
    }

    #qrCode{
        position: absolute;
    }

</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/qrious/4.0.2/qrious.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>

<body>
    <div id="countdown"></div>
    <div id="qrCode"></div>
    <center><video id="video" width="100%" height="100%" muted autoplay></video></center>
    <canvas id="canvas" style="overflow:auto" width="100%" height="100%"></canvas>
</body>

<script type="text/javascript">

    var prefs = new gadgets.Prefs();

    let timeRemain = __UP_myCountdownPref__;
    let timerStyle = "__UP_timerLoc__";

    //generate random QR code for now
    var x = Math.floor((Math.random() * 99) + 1);
    document.getElementById("qrCode").innerHTML = ("<img src='https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=" + x + "'>");

    if (timerStyle == "TRight"){
        document.getElementById("countdown").style.right = "0";
        document.getElementById("countdown").style.top = "0";
        document.getElementById("qrCode").style.left = "0";
        document.getElementById("qrCode").style.top = "0";
    }
    else if (timerStyle == "BLeft"){
        document.getElementById("countdown").style.left = "0";
        document.getElementById("countdown").style.bottom = "0";
        document.getElementById("qrCode").style.right = "0";
        document.getElementById("qrCode").style.bottom = "0";
    }
    else if (timerStyle == "BRight"){
        document.getElementById("countdown").style.right = "0";
        document.getElementById("countdown").style.bottom = "0";
        document.getElementById("qrCode").style.left = "0";
        document.getElementById("qrCode").style.bottom = "0";
    }
    else if (timerStyle == "TLeft"){
        document.getElementById("countdown").style.left = "0";
        document.getElementById("countdown").style.top = "0";
        document.getElementById("qrCode").style.right = "0";
        document.getElementById("qrCode").style.top = "0";
    }

    //listener to activate timer in future potential
    function startTimer(){
        return true;
    }
    
    //intercept the command callback
    window.RevelDigital = {
        Controller: {
            onCommand: function(name, arg) {
                console.log(name);
                console.log(arg);
                canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
                var data = canvas.toDataURL();
                console.log(data);

                /* axios.post("https://photo-booth.herokuapp.com/photo", {
                    "key": "5203977e-3e11-49d5-8f27-50d732f4ed3a",
                    "photo": arg
                })
                .then((response) => console.log(response.data))
                .then((error) => console.log(error)); /*

                axios.post("https://photo-booth.herokuapp.com/photo", {
                    "key": "5203977e-3e11-49d5-8f27-50d732f4ed3a",
                    "photo": data
                })
                .then((response) => console.log(response.data))
                .then((error) => console.log(error));
            },
            onStart: function() {
            },
            onStop: function() {
            }
        }
    }

    const video = document.getElementById("video")
    async function getMedia() {
        let stream = null
        try {
            stream = await navigator.mediaDevices.getUserMedia({ video: true })
            video.srcObject = stream
        } catch (err) {
            console.log("error")
        }
    }
    getMedia();

    if (startTimer()){
        console.log("Counting down");
        var downloadTimer = setInterval(function(){
            //when timer hits 0
            if(timeRemain <= 0){
                clearInterval(downloadTimer);
                Client.sendCommand("takesnapshot", "");
                document.getElementById("countdown").innerHTML = "Cheese!";
                console.log("snapshot taken");
            } else {
                document.getElementById("countdown").innerHTML = timeRemain;
            }
            timeRemain -= 1;
        }, 1000);
    }

</script>]]></Content>
</Module>